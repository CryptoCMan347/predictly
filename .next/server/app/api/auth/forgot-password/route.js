"use strict";(()=>{var e={};e.id=118,e.ids=[118],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},97969:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>w,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>f,staticGenerationAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>d});var o=t(49303),a=t(88716),i=t(60670),n=t(87070),u=t(20728),p=t(98691);async function d(e){try{let{email:r,newPassword:t}=await e.json();if(!r||!t)return n.NextResponse.json({error:"Missing fields."},{status:400});let s=await u.Z.user.findUnique({where:{email:r}});if(!s)return n.NextResponse.json({error:"User not found."},{status:404});let o=await (0,p.vp)(t,10);return await u.Z.user.update({where:{id:s.id},data:{hashedPassword:o}}),n.NextResponse.json({success:!0})}catch(e){return n.NextResponse.json({error:"Server error."},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/auth/forgot-password/route",pathname:"/api/auth/forgot-password",filename:"route",bundlePath:"app/api/auth/forgot-password/route"},resolvedPagePath:"C:\\Users\\Christian Domingues\\cursor_projects\\Predictly\\src\\app\\api\\auth\\forgot-password\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:h,serverHooks:f}=c,g="/api/auth/forgot-password/route";function w(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:h})}},20728:(e,r,t)=>{t.d(r,{Z:()=>s});let s=new(require("@prisma/client")).PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[276,972,691],()=>t(97969));module.exports=s})();